{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","console","log","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","registerServiceWorker"],"mappings":"kRAyBeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCJV,SAACA,EAAUE,EAAX,IACYC,EAD2B,EAAjBA,eAGlBC,OAAOH,UAAUI,MAAK,WAC7BL,EAAS,CAAEM,KAAM,8BDIRP,EApBO,SAACQ,GACrB,OACE,6BACE,wBAAIC,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,aACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCAC3BD,EAAMI,QAAQC,gBEEVC,EAXQ,WACrB,OACE,6BACE,wBAAIL,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCqBGV,eARS,SAACe,GAEvB,MAAM,CACJV,KAAMU,EAAMC,SAASX,KACrBO,QAASG,EAAMC,SAASJ,WAIbZ,EAvBA,SAACQ,GAAW,IACjBH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QAERK,EAAQZ,EAAKa,IAAM,kBAAC,EAAD,CAAeN,QAASA,IAAc,kBAAC,EAAD,MAE/D,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,WACCQ,O,iBCDME,EAZQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACvB,OACE,yBAAKX,UAAU,kCACb,yBAAKA,UAAU,yCACb,0BAAMA,UAAU,kBAAkBW,EAAQC,OAC1C,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAGd,UAAU,aAAae,IAAOJ,EAAQK,UAAUC,UAAUC,eCUtDC,EAdK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACE,yBAAKpB,UAAU,wBACXoB,GAAYA,EAASC,KAAI,SAAAV,GACzB,OACE,kBAAC,IAAD,CAAMV,GAAI,YAAcU,EAAQW,GAAIC,IAAKZ,EAAQW,IAC/C,kBAAC,EAAD,CAAgBX,QAASA,UCmBtBa,EA3BO,SAACzB,GAAW,IACxB0B,EAAkB1B,EAAlB0B,cACR,OACE,yBAAKzB,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACXyB,GACCA,EAAcJ,KAAI,SAACK,GACjB,OACE,wBAAIH,IAAKG,EAAKJ,IACZ,0BAAMtB,UAAU,aAAa0B,EAAKC,KAAlC,KACA,0BAAM3B,UAAU,4BAA4B0B,EAAKE,SACjD,yBAAK5B,UAAU,uBACZe,IAAOW,EAAKG,KAAKZ,UAAUa,oB,gBCT5CC,E,uKACM,IAAD,EACkCC,KAAKjC,MAAtCqB,EADD,EACCA,SAAUxB,EADX,EACWA,KAAK6B,EADhB,EACgBA,cACvB,OAAK7B,EAAKa,IAGR,yBAAKT,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACd,oCAAS,0BAAMA,UAAU,yBAAhB,kCACR,kBAAC,EAAD,CAAaoB,SAAUA,KAEzB,yBAAKpB,UAAU,wBACb,kBAAC,EAAD,CAAeyB,cAAeA,OAVhB,kBAAC,IAAD,CAAUxB,GAAG,gB,GAHfgC,aA8BTC,cACb3C,aAVsB,SAACe,GAEvB,MAAO,CACLc,SAAUd,EAAM6B,UAAUC,QAAQhB,SAClCxB,KAAMU,EAAMC,SAASX,KACrB6B,cAAcnB,EAAM6B,UAAUC,QAAQX,kBAMxCY,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAQ,CAAC,YAAY,SAC/C,CAAED,WAAY,gBAAiBE,MAAO,EAAED,QAAQ,CAAC,OAAO,WAJ7CL,CAMbH,GCCaG,cACb3C,aAZsB,SAACe,EAAOmC,GAE9B,IAAMnB,EAAKmB,EAASC,MAAMC,OAAOrB,GAC3BF,EAAWd,EAAM6B,UAAUS,KAAKxB,SAEtC,MAAO,CACLT,QAFcS,EAAWA,EAASE,GAAM,KAGxC1B,KAAMU,EAAMC,SAASX,SAMvByC,2BAAiB,CAAC,CAChBC,WAAY,cAHDJ,EAtCQ,SAACnC,GAAW,IACzBY,EAAkBZ,EAAlBY,QACR,OAD0BZ,EAATH,KACPa,IACNE,EAEA,yBAAKX,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAcW,EAAQC,OACtC,2BAAID,EAAQiB,UAEd,yBAAK5B,UAAU,kBACb,yBAAKA,UAAU,4BAAf,aAAqDW,EAAQE,gBAA7D,IAA+EF,EAAQG,gBACvF,yBAAKd,UAAU,aAAae,IAAOJ,EAAQK,UAAUC,UAAUC,eAOrE,yBAAKlB,UAAU,oBACb,kDAnBgB,kBAAC,IAAD,CAAUC,GAAG,e,QCJ/B4C,E,4MACJvC,MAAQ,CACNwC,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAO7B,GAAK2B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKvD,MAAMwD,OAAO,EAAKjD,Q,uDAEf,IAAD,EACqB0B,KAAKjC,MAAzByD,EADD,EACCA,UACR,OAFO,EACY5D,KACVa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAMA,UAAU,GAAGyD,SAAUzB,KAAKqB,cAChC,wBAAIrD,UAAU,4BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQwB,GAAG,QAAQqC,SAAU3B,KAAKgB,gBAEhD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,YACA,2BAAO5D,KAAK,WAAWwB,GAAG,WAAWqC,SAAU3B,KAAKgB,gBAEtD,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACXwD,EAAY,2BAAIA,GAAiB,a,GAhC5BvB,aAsDN1C,eAbS,SAACe,GACvB,MAAM,CACJkD,UAAWlD,EAAMV,KAAK4D,UACtB5D,KAAMU,EAAMC,SAASX,SAIE,SAACJ,GAC1B,MAAO,CACL+D,OAAQ,SAACK,GAAD,OAAWpE,GRvDAqE,EQuDgBD,ERtD9B,SAACpE,EAAUE,EAAX,IACYC,EAD2B,EAAjBA,eAGlBC,OAAOkE,2BACdD,EAAYf,MACZe,EAAYd,UACZlD,MAAK,WACLL,EAAS,CAAEM,KAAM,qBAChBiE,OAAM,SAACC,GACRxE,EAAS,CAAEM,KAAM,cAAekE,cAVhB,IAACH,MQ2DRtE,CAA6CsD,GCtDtDoB,E,4MACJ3D,MAAQ,CACNwC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAEZnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAO7B,GAAK2B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKvD,MAAMqE,OAAO,EAAK9D,Q,uDAEf,IAAD,EACqB0B,KAAKjC,MAAzBH,EADD,EACCA,KAAM4D,EADP,EACOA,UACd,OAAI5D,EAAKa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAMA,UAAU,GAAGyD,SAAUzB,KAAKqB,cAChC,wBAAIrD,UAAU,4BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQwB,GAAG,QAAQqC,SAAU3B,KAAKgB,gBAEhD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,YACA,2BAAO5D,KAAK,WAAWwB,GAAG,WAAWqC,SAAU3B,KAAKgB,gBAEtD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,aAAf,cACA,2BAAO5D,KAAK,OAAOwB,GAAG,YAAYqC,SAAU3B,KAAKgB,gBAEnD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,aACA,2BAAO5D,KAAK,OAAOwB,GAAG,WAAWqC,SAAU3B,KAAKgB,gBAElD,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBACXwD,EAAY,2BAAIA,GAAiB,a,GA1C5BvB,aAgEN1C,eAbS,SAACe,GACvB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrB4D,UAAWlD,EAAMV,KAAK4D,cAIC,SAAChE,GAC1B,MAAO,CACL4E,OAAQ,SAACR,GAAD,OAAWpE,GTvCA6E,ESuCgBT,ETtC9B,SAACpE,EAAUE,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAAa2E,EAAkB,EAAlBA,aAClC/D,EAAWZ,IACXwC,EAAYmC,IAElB/D,EAASX,OAAO2E,+BACdF,EAAQvB,MACRuB,EAAQtB,UACRlD,MAAK,SAAA2E,GACL,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAK7C,KAAKlB,KAAKiE,IAAI,CAC1DR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB/D,SAAUiE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEnDtE,MAAK,WACNL,EAAS,CAAEM,KAAM,sBAChBiE,OAAM,SAACC,GACRxE,EAAS,CAAEM,KAAM,eAAgBkE,cAjBjB,IAACK,MS2CR9E,CAA6C0E,G,QChEtDU,E,4MACJrE,MAAQ,CACNM,MAAO,GACPgB,QAAS,I,EAEXoB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAO7B,GAAK2B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKvD,MAAM6E,cAAc,EAAKtE,OAC9B,EAAKP,MAAM8E,QAAQC,KAAK,M,uDAIxB,OADiB9C,KAAKjC,MAAdH,KACEa,IAER,yBAAKT,UAAU,aACb,0BAAMA,UAAU,GAAGyD,SAAUzB,KAAKqB,cAChC,wBAAIrD,UAAU,4BAAd,qBACA,yBAAKA,UAAU,eACb,2BAAOF,KAAK,OAAOwB,GAAG,QAAQqC,SAAU3B,KAAKgB,eAC7C,2BAAOU,QAAQ,SAAf,eAEF,yBAAK1D,UAAU,eACb,8BAAUsB,GAAG,UAAUtB,UAAU,0BAA0B2D,SAAU3B,KAAKgB,eAC1E,2BAAOU,QAAQ,WAAf,YAEF,yBAAK1D,UAAU,eACb,4BAAQA,UAAU,sBAAlB,WAdc,kBAAC,IAAD,CAAUC,GAAG,gB,GAlBXgC,aAoDb1C,eAZS,SAACe,GACvB,MAAO,CACLV,KAAMU,EAAMC,SAASX,SAIE,SAAAJ,GACzB,MAAO,CACLoF,cAAe,SAACjE,GAAD,OAAanB,ECrDH,SAACmB,GAC5B,OAAO,SAACnB,EAAUE,EAAX,GAAyC,IACxCyC,GAAYmC,EAD2B,EAAlBA,gBAE3BS,QAAQC,IAAItF,IAAWa,UACvB,IAAMJ,EAAUT,IAAWa,SAASJ,QAC9B8E,EAAWvF,IAAWa,SAASX,KAAKa,IAC1C0B,EAAUG,WAAW,YAAY4C,IAAjC,eACKvE,EADL,CAEEE,gBAAiBV,EAAQ+D,UACzBpD,eAAgBX,EAAQgE,SACxBc,SAAUA,EACVjE,UAAW,IAAImE,QACdtF,MAAK,WACNL,EAAS,CAAEM,KAAM,8BAChBiE,OAAM,SAAAC,GACPxE,EAAS,CAAEM,KAAM,wBAA0BkE,ODsCRY,CAAcjE,QAIxCpB,CAA6CoF,GE7B7CS,E,uKAjBX,OACE,kBAAC,IAAD,KACE,yBAAKpF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,IAAGC,UAAWxD,IAChC,kBAAC,IAAD,CAAOuD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW1C,IACjC,kBAAC,IAAD,CAAOyC,KAAK,UAAUC,UAAWtB,IACjC,kBAAC,IAAD,CAAOqB,KAAK,UAAUC,UAAWZ,W,GAX3B1C,aCCZwD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2DAIS,SAASoD,IACtB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,GAAwBN,OAAOC,UAC3CM,SAAWP,OAAOC,SAASM,OAIvC,OAGFP,OAAOQ,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMH,GAAN,sBAEPR,IAiDV,SAAiCW,GAE/BC,MAAMD,GACHvG,MAAK,SAAAyG,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CX,UAAUY,cAAcC,MAAM/G,MAAK,SAAAgH,GACjCA,EAAaC,aAAajH,MAAK,WAC7B8F,OAAOC,SAASmB,eAKpBC,EAAgBZ,MAGnBrC,OAAM,WACLgB,QAAQC,IACN,oEArEAiC,CAAwBb,GAIxBL,UAAUY,cAAcC,MAAM/G,MAAK,WACjCkF,QAAQC,IACN,gHAMJgC,EAAgBZ,OAMxB,SAASY,EAAgBZ,GACvBL,UAAUY,cACPb,SAASM,GACTvG,MAAK,SAAAgH,GACJA,EAAaK,cAAgB,WAC3B,IAAMC,EAAmBN,EAAaO,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7G,QACfyF,UAAUY,cAAcW,WAK1BvC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBjB,OAAM,SAAAwD,GACLxC,QAAQwC,MAAM,4CAA6CA,MC/EjE,IAAMC,EAAY,CAChBhE,UAAW,MA0CEiE,EAvCK,WAAgC,IAA/BnH,EAA8B,uDAAtBkH,EAAWE,EAAW,uCACjD,OAAOA,EAAO5H,MACZ,IAAK,cAEH,OADAiF,QAAQC,IAAI,eACL,eACF1E,EADL,CAEEkD,UAAW,iBAGf,IAAK,gBAEH,OADAuB,QAAQC,IAAI,iBACL,eACF1E,EADL,CAEEkD,UAAW,OAGf,IAAK,kBAEH,OADAuB,QAAQC,IAAI,mBACL1E,EAET,IAAK,iBAEH,OADAyE,QAAQC,IAAI,kBACL,eACF1E,EADL,CAEEkD,UAAW,OAGf,IAAK,eAEH,OADAuB,QAAQC,IAAI,gBACL,eACF1E,EADL,CAEEkD,UAAWkE,EAAO1D,IAAI2D,UAG1B,QACE,OAAOrH,ICvCPkH,EAAY,GAeHI,EAbQ,WAAgC,IAA/BtH,EAA8B,uDAAtBkH,EAAWE,EAAW,uCACpD,OAAQA,EAAO5H,MACb,IAAK,yBAEH,OADAiF,QAAQC,IAAI,0BACL1E,EACT,IAAK,uBAEH,OADAyE,QAAQC,IAAI,wBACL1E,EACT,QACE,OAAOA,I,QCEEuH,EAPKC,YAAgB,CAClClI,KAAM6H,EACN9G,QAASiH,EACTzF,UAAW4F,mBACXxH,SAAUyH,oB,wCCKVzH,IAAS0H,cAXI,CACXC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBlI,IAAS4B,YAAYuG,SAAS,CAACC,uBAAsB,IAEtCpI,QAAf,ECLIqI,EAAQC,YAAYhB,EACxB3F,YACE4G,YAAgBC,IAAMC,kBAAkB,CAACrJ,0BAAa2E,+BACtD2E,6BAAmBC,EAAU,CAACC,YAAa,QAASC,wBAAwB,EAAMC,mBAAmB,IACrGC,yBAAeJ,KAInBN,EAAMW,oBAAoB1J,MAAK,WAC7B2J,IAASC,OAAO,kBAAC,IAAD,CAAUb,MAAOA,GAAO,kBAAC,EAAD,OAAoBc,SAASC,eAAe,SACpFC,S","file":"static/js/main.c0326697.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Post</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">posThat</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\nimport moment from 'moment'\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-1 project-summary\">\n      <div className=\"card-content grey-text text-lighten-2\">\n        <span className=\"card-title bl \">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList\n","import React from \"react\";\nimport moment from \"moment\";\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-1\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span className=\"grey-text text-lighten-3\">{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { Component } from \"react\";\nimport ProjectList from \"../projects/ProjectList\";\nimport Notifications from \"./Notifications\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth,notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n           <center> <span className=\"grey-text text-center\">Click on post to view content</span></center>\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications:state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\" ,orderBy:['createdAt','desc']},\n    { collection: \"notifications\", limit: 3,orderBy:['time','desc'] },\n  ])\n)(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport moment from 'moment'\nimport { Redirect } from 'react-router-dom'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-1\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action   \">\n            <div className=\"grey-text text-lighten-2\">Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"\" onSubmit={this.handleSubmit}>\n          <h5 className=\"white-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"\" onSubmit={this.handleSubmit}>\n          <h5 className=\"white-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <form className=\"\" onSubmit={this.handleSubmit}>\n          <h5 className=\"white-text text-darken-3\">Create a new post</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Post Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea eh\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Post</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    console.log(getState().firebase)\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar fbConfig = {\n    apiKey: \"AIzaSyBLK1WpZT8Nz-JfRGZak7u8AL1WpkesCVs\",\n    authDomain: \"project-manager-cacef.firebaseapp.com\",\n    databaseURL: \"https://project-manager-cacef.firebaseio.com\",\n    projectId: \"project-manager-cacef\",\n    storageBucket: \"project-manager-cacef.appspot.com\",\n    messagingSenderId: \"223110973103\",\n    appId: \"1:223110973103:web:ab4077f953fe4115cbf65a\",\n    measurementId: \"G-VNRYJRY2LR\"\n  };\n\n  firebase.initializeApp(fbConfig);\n  firebase.firestore().settings({timestampsInSnapshots:true})\n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from \"./config/fbconfig\"\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  registerServiceWorker();\n});\n\n"],"sourceRoot":""}